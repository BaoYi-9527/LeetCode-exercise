<?php
/*
给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。

示例 1:
输入: "abcabcbb"
输出: 3 
解释: 因为无重复字符的最长子串是 "abc"，所以其长度为 3。

示例 2:
输入: "bbbbb"
输出: 1
解释: 因为无重复字符的最长子串是 "b"，所以其长度为 1。

示例 3:
输入: "pwwkew"
输出: 3
解释: 因为无重复字符的最长子串是 "wke"，所以其长度为 3。
请注意，你的答案必须是 子串 的长度，"pwke" 是一个子序列，不是子串。

*/

class Solution {

    /**
     * @param String $s
     * @return Integer
     */
    function lengthOfLongestSubstring($s) {
    	if(!$s || strlen($s) == 0) return 0;

    	$array = [];
    	$ret = 0;
    	$start = 0;
    	for ($i=0; $i < strlen($s); $i++) { 
    		if(isset($array[$s[$i]]) && $start <= $array[$s[$i]]){
    			$start = $array[$s[$i]] + 1;
    		} else {
    			$ret = max($ret, $i - $start + 1);
    		}
    		$array[$s[$i]] = $i;
    	}
    	return $ret;
    }
}

/*
解题思路：
1.先判断边界条件，字符串$s是否存在，是否合法的
2.创建一个数组 array 来存储目前遍历得到的无重复字符子串；变量 ret 存放当前无重复字符子串的长度；变量 start 存放当前无重复字符子串开始的下标
3.对当前的字符串进行遍历：

若当前遍历的元素已经存在于array数组，即之前的子串中，且子串开始的下标小于等于当前遍历元素的下标，则将子串开始的下标移动到数组array中重复元素的下标再加一，然后将当前遍历元素以及其下标存入数组array中（数组中的对应关系是：元素=>下标）

若当前遍历的元素不存在于array数组中，及无重复，则将比较当前无重复子串的长度和当前元素下标减去无重复子串开始的下标然后加一，即更新无重复子串的长度，并将新的元素存入数组中

4.循环结束，返回数组长度

 */